load("@com_github_buildbarn_bb_storage//tools:container.bzl", "container_push_official", "multiarch_go_image")
load("@rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "bb_clientd_lib",
    srcs = ["main.go"],
    importpath = "github.com/buildbarn/bb-clientd/cmd/bb_clientd",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/blobstore",
        "//pkg/filesystem/virtual",
        "//pkg/outputpathpersistency",
        "//pkg/proto/configuration/bb_clientd",
        "@bazel_remote_apis//build/bazel/remote/execution/v2:remote_execution_go_proto",
        "@com_github_buildbarn_bb_remote_execution//pkg/cas",
        "@com_github_buildbarn_bb_remote_execution//pkg/filesystem",
        "@com_github_buildbarn_bb_remote_execution//pkg/filesystem/virtual",
        "@com_github_buildbarn_bb_remote_execution//pkg/filesystem/virtual/configuration",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/bazeloutputservice",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/configuration",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/grpcservers",
        "@com_github_buildbarn_bb_storage//pkg/builder",
        "@com_github_buildbarn_bb_storage//pkg/capabilities",
        "@com_github_buildbarn_bb_storage//pkg/clock",
        "@com_github_buildbarn_bb_storage//pkg/digest",
        "@com_github_buildbarn_bb_storage//pkg/filesystem",
        "@com_github_buildbarn_bb_storage//pkg/filesystem/path",
        "@com_github_buildbarn_bb_storage//pkg/global",
        "@com_github_buildbarn_bb_storage//pkg/grpc",
        "@com_github_buildbarn_bb_storage//pkg/program",
        "@com_github_buildbarn_bb_storage//pkg/random",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@org_golang_google_genproto_googleapis_bytestream//:bytestream",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_x_sync//semaphore",
    ],
)

go_binary(
    name = "bb_clientd",
    embed = [":bb_clientd_lib"],
    visibility = ["//visibility:public"],
)

multiarch_go_image(
    name = "bb_clientd_container",
    binary = ":bb_clientd",
)

container_push_official(
    name = "bb_clientd_container_push",
    component = "bb-clientd",
    image = ":bb_clientd_container",
)
