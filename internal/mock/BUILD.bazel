load("@rules_go//extras:gomock.bzl", "gomock")
load("@rules_go//go:def.bzl", "go_library")

gomock(
    name = "aliases",
    out = "aliases.go",
    interfaces = [
        "ReaderAt",
        "WriterAt",
    ],
    library = "//internal/mock/aliases",
    package = "mock",
)

gomock(
    name = "blobstore",
    out = "blobstore.go",
    interfaces = ["BlobAccess"],
    library = "@com_github_buildbarn_bb_storage//pkg/blobstore",
    package = "mock",
)

gomock(
    name = "blobstore_slicing",
    out = "blobstore_slicing.go",
    interfaces = ["BlobSlicer"],
    library = "@com_github_buildbarn_bb_storage//pkg/blobstore/slicing",
    package = "mock",
)

gomock(
    name = "clock",
    out = "clock.go",
    interfaces = [
        "Clock",
        "Timer",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/clock",
    package = "mock",
)

gomock(
    name = "filesystem",
    out = "filesystem.go",
    interfaces = [
        "Directory",
        "FileReader",
        "FileWriter",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/filesystem",
    package = "mock",
)

gomock(
    name = "filesystem_virtual",
    out = "filesystem_virtual.go",
    interfaces = [
        "CASDirectoryContext",
        "DigestLookupFunc",
        "InstanceNameLookupFunc",
        "OutputPath",
        "OutputPathFactory",
    ],
    library = "//pkg/filesystem/virtual",
    package = "mock",
)

gomock(
    name = "outputpathpersistency",
    out = "outputpathpersistency.go",
    interfaces = [
        "ReadCloser",
        "Store",
    ],
    library = "//pkg/outputpathpersistency",
    mock_names = {
        "ReadCloser": "MockOutputPathPersistencyReadCloser",
        "Store": "MockOutputPathPersistencyStore",
    },
    package = "mock",
)

gomock(
    name = "random",
    out = "random.go",
    interfaces = [
        "SingleThreadedGenerator",
        "ThreadSafeGenerator",
    ],
    library = "@com_github_buildbarn_bb_storage//pkg/random",
    package = "mock",
)

gomock(
    name = "re_cas",
    out = "re_cas.go",
    interfaces = ["DirectoryFetcher"],
    library = "@com_github_buildbarn_bb_remote_execution//pkg/cas",
    package = "mock",
)

gomock(
    name = "re_filesystem",
    out = "re_filesystem.go",
    interfaces = ["FilePool"],
    library = "@com_github_buildbarn_bb_remote_execution//pkg/filesystem",
    package = "mock",
)

gomock(
    name = "re_filesystem_virtual",
    out = "re_filesystem_virtual.go",
    interfaces = [
        "CASFileFactory",
        "ChildRemover",
        "Directory",
        "DirectoryEntryReporter",
        "InitialContentsFetcher",
        "Leaf",
        "NativeLeaf",
        "PrepopulatedDirectory",
        "ResolvableHandleAllocation",
        "ResolvableHandleAllocator",
        "StatefulDirectoryHandle",
        "StatefulHandleAllocation",
        "StatefulHandleAllocator",
        "StatelessHandleAllocation",
        "StatelessHandleAllocator",
        "SymlinkFactory",
    ],
    library = "@com_github_buildbarn_bb_remote_execution//pkg/filesystem/virtual",
    mock_names = {
        "Directory": "MockVirtualDirectory",
        "Leaf": "MockVirtualLeaf",
    },
    package = "mock",
)

gomock(
    name = "storage_util",
    out = "storage_util.go",
    interfaces = ["ErrorLogger"],
    library = "@com_github_buildbarn_bb_storage//pkg/util",
    package = "mock",
)

go_library(
    name = "mock",
    srcs = [
        "aliases.go",
        "blobstore.go",
        "blobstore_slicing.go",
        "clock.go",
        "dummy.go",
        "filesystem.go",
        "filesystem_virtual.go",
        "outputpathpersistency.go",
        "random.go",
        "re_cas.go",
        "re_filesystem.go",
        "re_filesystem_virtual.go",
        "storage_util.go",
    ],
    importpath = "github.com/buildbarn/bb-clientd/internal/mock",
    visibility = ["//:__subpackages__"],
    # keep
    deps = [
        "//pkg/cas",
        "//pkg/filesystem/virtual",
        "//pkg/outputpathpersistency",
        "@com_github_bazelbuild_remote_apis//build/bazel/remote/execution/v2:execution",
        "@com_github_buildbarn_bb_remote_execution//pkg/filesystem/virtual",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/bazeloutputservice",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/outputpathpersistency",
        "@com_github_buildbarn_bb_storage//pkg/blobstore",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/buffer",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/slicing",
        "@com_github_buildbarn_bb_storage//pkg/clock",
        "@com_github_buildbarn_bb_storage//pkg/digest",
        "@com_github_buildbarn_bb_storage//pkg/filesystem",
        "@com_github_buildbarn_bb_storage//pkg/filesystem/path",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@com_github_golang_mock//gomock",
    ],
)
